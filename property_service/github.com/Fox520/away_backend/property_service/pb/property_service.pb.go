// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: property_service.proto

package pb

import (
	pb "github.com/Fox520/away_backend/user_service/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Property struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID              string                 `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	PropertyTypeID      int32                  `protobuf:"varint,3,opt,name=propertyTypeID,proto3" json:"propertyTypeID,omitempty"`
	PropertyType        string                 `protobuf:"bytes,4,opt,name=propertyType,proto3" json:"propertyType,omitempty"`
	PropertyCategoryID  int32                  `protobuf:"varint,5,opt,name=propertyCategoryID,proto3" json:"propertyCategoryID,omitempty"`
	PropertyCategory    string                 `protobuf:"bytes,6,opt,name=propertyCategory,proto3" json:"propertyCategory,omitempty"`
	PropertyUsageID     int32                  `protobuf:"varint,7,opt,name=propertyUsageID,proto3" json:"propertyUsageID,omitempty"`
	PropertyUsage       string                 `protobuf:"bytes,8,opt,name=propertyUsage,proto3" json:"propertyUsage,omitempty"`
	Bedrooms            int32                  `protobuf:"varint,9,opt,name=bedrooms,proto3" json:"bedrooms,omitempty"`
	Bathrooms           int32                  `protobuf:"varint,10,opt,name=bathrooms,proto3" json:"bathrooms,omitempty"`
	Surburb             string                 `protobuf:"bytes,11,opt,name=surburb,proto3" json:"surburb,omitempty"`
	Town                string                 `protobuf:"bytes,12,opt,name=town,proto3" json:"town,omitempty"`
	Title               string                 `protobuf:"bytes,13,opt,name=title,proto3" json:"title,omitempty"`
	Description         string                 `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`
	Currency            string                 `protobuf:"bytes,15,opt,name=currency,proto3" json:"currency,omitempty"`
	Available           bool                   `protobuf:"varint,16,opt,name=available,proto3" json:"available,omitempty"`
	Price               float32                `protobuf:"fixed32,17,opt,name=price,proto3" json:"price,omitempty"`
	Deposit             float32                `protobuf:"fixed32,18,opt,name=deposit,proto3" json:"deposit,omitempty"`
	SharingPrice        float32                `protobuf:"fixed32,19,opt,name=sharingPrice,proto3" json:"sharingPrice,omitempty"`
	Promoted            bool                   `protobuf:"varint,20,opt,name=promoted,proto3" json:"promoted,omitempty"`
	PostedDate          *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=postedDate,proto3" json:"postedDate,omitempty"`
	PetsAllowed         bool                   `protobuf:"varint,22,opt,name=petsAllowed,proto3" json:"petsAllowed,omitempty"`
	FreeWifi            bool                   `protobuf:"varint,23,opt,name=freeWifi,proto3" json:"freeWifi,omitempty"`
	WaterIncluded       bool                   `protobuf:"varint,24,opt,name=waterIncluded,proto3" json:"waterIncluded,omitempty"`
	ElectricityIncluded bool                   `protobuf:"varint,25,opt,name=electricityIncluded,proto3" json:"electricityIncluded,omitempty"`
	Latitude            float32                `protobuf:"fixed32,26,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude           float32                `protobuf:"fixed32,27,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Photos              []*Photo               `protobuf:"bytes,28,rep,name=photos,proto3" json:"photos,omitempty"`
}

func (x *Property) Reset() {
	*x = Property{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{0}
}

func (x *Property) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Property) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Property) GetPropertyTypeID() int32 {
	if x != nil {
		return x.PropertyTypeID
	}
	return 0
}

func (x *Property) GetPropertyType() string {
	if x != nil {
		return x.PropertyType
	}
	return ""
}

func (x *Property) GetPropertyCategoryID() int32 {
	if x != nil {
		return x.PropertyCategoryID
	}
	return 0
}

func (x *Property) GetPropertyCategory() string {
	if x != nil {
		return x.PropertyCategory
	}
	return ""
}

func (x *Property) GetPropertyUsageID() int32 {
	if x != nil {
		return x.PropertyUsageID
	}
	return 0
}

func (x *Property) GetPropertyUsage() string {
	if x != nil {
		return x.PropertyUsage
	}
	return ""
}

func (x *Property) GetBedrooms() int32 {
	if x != nil {
		return x.Bedrooms
	}
	return 0
}

func (x *Property) GetBathrooms() int32 {
	if x != nil {
		return x.Bathrooms
	}
	return 0
}

func (x *Property) GetSurburb() string {
	if x != nil {
		return x.Surburb
	}
	return ""
}

func (x *Property) GetTown() string {
	if x != nil {
		return x.Town
	}
	return ""
}

func (x *Property) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Property) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Property) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Property) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *Property) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Property) GetDeposit() float32 {
	if x != nil {
		return x.Deposit
	}
	return 0
}

func (x *Property) GetSharingPrice() float32 {
	if x != nil {
		return x.SharingPrice
	}
	return 0
}

func (x *Property) GetPromoted() bool {
	if x != nil {
		return x.Promoted
	}
	return false
}

func (x *Property) GetPostedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostedDate
	}
	return nil
}

func (x *Property) GetPetsAllowed() bool {
	if x != nil {
		return x.PetsAllowed
	}
	return false
}

func (x *Property) GetFreeWifi() bool {
	if x != nil {
		return x.FreeWifi
	}
	return false
}

func (x *Property) GetWaterIncluded() bool {
	if x != nil {
		return x.WaterIncluded
	}
	return false
}

func (x *Property) GetElectricityIncluded() bool {
	if x != nil {
		return x.ElectricityIncluded
	}
	return false
}

func (x *Property) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Property) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Property) GetPhotos() []*Photo {
	if x != nil {
		return x.Photos
	}
	return nil
}

type MinimalProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PropertyTypeID     int32                  `protobuf:"varint,2,opt,name=propertyTypeID,proto3" json:"propertyTypeID,omitempty"`
	PropertyType       string                 `protobuf:"bytes,3,opt,name=propertyType,proto3" json:"propertyType,omitempty"`
	PropertyCategoryID int32                  `protobuf:"varint,4,opt,name=propertyCategoryID,proto3" json:"propertyCategoryID,omitempty"`
	PropertyCategory   string                 `protobuf:"bytes,5,opt,name=propertyCategory,proto3" json:"propertyCategory,omitempty"`
	PropertyUsageID    int32                  `protobuf:"varint,6,opt,name=propertyUsageID,proto3" json:"propertyUsageID,omitempty"`
	PropertyUsage      string                 `protobuf:"bytes,7,opt,name=propertyUsage,proto3" json:"propertyUsage,omitempty"`
	Bedrooms           int32                  `protobuf:"varint,8,opt,name=bedrooms,proto3" json:"bedrooms,omitempty"`
	Title              string                 `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	Currency           string                 `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"`
	Price              float32                `protobuf:"fixed32,11,opt,name=price,proto3" json:"price,omitempty"`
	Promoted           bool                   `protobuf:"varint,12,opt,name=promoted,proto3" json:"promoted,omitempty"`
	PostedDate         *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=postedDate,proto3" json:"postedDate,omitempty"`
	Photos             []*Photo               `protobuf:"bytes,14,rep,name=photos,proto3" json:"photos,omitempty"`
	UserID             string                 `protobuf:"bytes,15,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *MinimalProperty) Reset() {
	*x = MinimalProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinimalProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinimalProperty) ProtoMessage() {}

func (x *MinimalProperty) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinimalProperty.ProtoReflect.Descriptor instead.
func (*MinimalProperty) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{1}
}

func (x *MinimalProperty) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MinimalProperty) GetPropertyTypeID() int32 {
	if x != nil {
		return x.PropertyTypeID
	}
	return 0
}

func (x *MinimalProperty) GetPropertyType() string {
	if x != nil {
		return x.PropertyType
	}
	return ""
}

func (x *MinimalProperty) GetPropertyCategoryID() int32 {
	if x != nil {
		return x.PropertyCategoryID
	}
	return 0
}

func (x *MinimalProperty) GetPropertyCategory() string {
	if x != nil {
		return x.PropertyCategory
	}
	return ""
}

func (x *MinimalProperty) GetPropertyUsageID() int32 {
	if x != nil {
		return x.PropertyUsageID
	}
	return 0
}

func (x *MinimalProperty) GetPropertyUsage() string {
	if x != nil {
		return x.PropertyUsage
	}
	return ""
}

func (x *MinimalProperty) GetBedrooms() int32 {
	if x != nil {
		return x.Bedrooms
	}
	return 0
}

func (x *MinimalProperty) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MinimalProperty) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *MinimalProperty) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MinimalProperty) GetPromoted() bool {
	if x != nil {
		return x.Promoted
	}
	return false
}

func (x *MinimalProperty) GetPostedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PostedDate
	}
	return nil
}

func (x *MinimalProperty) GetPhotos() []*Photo {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *MinimalProperty) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type Photo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url        string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	PropertyID string `protobuf:"bytes,3,opt,name=propertyID,proto3" json:"propertyID,omitempty"`
}

func (x *Photo) Reset() {
	*x = Photo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Photo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Photo) ProtoMessage() {}

func (x *Photo) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Photo.ProtoReflect.Descriptor instead.
func (*Photo) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{2}
}

func (x *Photo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Photo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Photo) GetPropertyID() string {
	if x != nil {
		return x.PropertyID
	}
	return ""
}

type FeaturedAreasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *FeaturedAreasRequest) Reset() {
	*x = FeaturedAreasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeaturedAreasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeaturedAreasRequest) ProtoMessage() {}

func (x *FeaturedAreasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeaturedAreasRequest.ProtoReflect.Descriptor instead.
func (*FeaturedAreasRequest) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{3}
}

func (x *FeaturedAreasRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type FeaturedAreasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeaturedAreas []*FeaturedArea `protobuf:"bytes,1,rep,name=featuredAreas,proto3" json:"featuredAreas,omitempty"`
}

func (x *FeaturedAreasResponse) Reset() {
	*x = FeaturedAreasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeaturedAreasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeaturedAreasResponse) ProtoMessage() {}

func (x *FeaturedAreasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeaturedAreasResponse.ProtoReflect.Descriptor instead.
func (*FeaturedAreasResponse) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{4}
}

func (x *FeaturedAreasResponse) GetFeaturedAreas() []*FeaturedArea {
	if x != nil {
		return x.FeaturedAreas
	}
	return nil
}

type FeaturedArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	PhotoURL  string  `protobuf:"bytes,2,opt,name=photoURL,proto3" json:"photoURL,omitempty"`
	Latitude  float32 `protobuf:"fixed32,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *FeaturedArea) Reset() {
	*x = FeaturedArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeaturedArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeaturedArea) ProtoMessage() {}

func (x *FeaturedArea) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeaturedArea.ProtoReflect.Descriptor instead.
func (*FeaturedArea) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{5}
}

func (x *FeaturedArea) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FeaturedArea) GetPhotoURL() string {
	if x != nil {
		return x.PhotoURL
	}
	return ""
}

func (x *FeaturedArea) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *FeaturedArea) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type PromotedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Radius    float32 `protobuf:"fixed32,3,opt,name=radius,proto3" json:"radius,omitempty"`
}

func (x *PromotedRequest) Reset() {
	*x = PromotedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotedRequest) ProtoMessage() {}

func (x *PromotedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotedRequest.ProtoReflect.Descriptor instead.
func (*PromotedRequest) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{6}
}

func (x *PromotedRequest) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *PromotedRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *PromotedRequest) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type PromotedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties []*SingleMinimalProperty `protobuf:"bytes,1,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *PromotedResponse) Reset() {
	*x = PromotedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotedResponse) ProtoMessage() {}

func (x *PromotedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotedResponse.ProtoReflect.Descriptor instead.
func (*PromotedResponse) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{7}
}

func (x *PromotedResponse) GetProperties() []*SingleMinimalProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

type DeletePropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyID string `protobuf:"bytes,1,opt,name=propertyID,proto3" json:"propertyID,omitempty"`
}

func (x *DeletePropertyRequest) Reset() {
	*x = DeletePropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePropertyRequest) ProtoMessage() {}

func (x *DeletePropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePropertyRequest.ProtoReflect.Descriptor instead.
func (*DeletePropertyRequest) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePropertyRequest) GetPropertyID() string {
	if x != nil {
		return x.PropertyID
	}
	return ""
}

type DeletePropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DeletePropertyResponse) Reset() {
	*x = DeletePropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePropertyResponse) ProtoMessage() {}

func (x *DeletePropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePropertyResponse.ProtoReflect.Descriptor instead.
func (*DeletePropertyResponse) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePropertyResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetSinglePropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSinglePropertyRequest) Reset() {
	*x = GetSinglePropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSinglePropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSinglePropertyRequest) ProtoMessage() {}

func (x *GetSinglePropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSinglePropertyRequest.ProtoReflect.Descriptor instead.
func (*GetSinglePropertyRequest) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetSinglePropertyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SinglePropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Property *Property           `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
	Owner    *pb.GetUserResponse `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *SinglePropertyResponse) Reset() {
	*x = SinglePropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SinglePropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinglePropertyResponse) ProtoMessage() {}

func (x *SinglePropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinglePropertyResponse.ProtoReflect.Descriptor instead.
func (*SinglePropertyResponse) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{11}
}

func (x *SinglePropertyResponse) GetProperty() *Property {
	if x != nil {
		return x.Property
	}
	return nil
}

func (x *SinglePropertyResponse) GetOwner() *pb.GetUserResponse {
	if x != nil {
		return x.Owner
	}
	return nil
}

type GetMultiplePropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Radius    float32 `protobuf:"fixed32,3,opt,name=radius,proto3" json:"radius,omitempty"`
}

func (x *GetMultiplePropertyRequest) Reset() {
	*x = GetMultiplePropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultiplePropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultiplePropertyRequest) ProtoMessage() {}

func (x *GetMultiplePropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultiplePropertyRequest.ProtoReflect.Descriptor instead.
func (*GetMultiplePropertyRequest) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetMultiplePropertyRequest) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetMultiplePropertyRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GetMultiplePropertyRequest) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type GetMultiplePropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *SinglePropertyResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetMultiplePropertyResponse) Reset() {
	*x = GetMultiplePropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMultiplePropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMultiplePropertyResponse) ProtoMessage() {}

func (x *GetMultiplePropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMultiplePropertyResponse.ProtoReflect.Descriptor instead.
func (*GetMultiplePropertyResponse) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetMultiplePropertyResponse) GetResponse() *SinglePropertyResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type CreatePropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Property *Property `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
}

func (x *CreatePropertyRequest) Reset() {
	*x = CreatePropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePropertyRequest) ProtoMessage() {}

func (x *CreatePropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePropertyRequest.ProtoReflect.Descriptor instead.
func (*CreatePropertyRequest) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreatePropertyRequest) GetProperty() *Property {
	if x != nil {
		return x.Property
	}
	return nil
}

type GetMinimalPropertiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Latitude  float32 `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Radius    float32 `protobuf:"fixed32,3,opt,name=radius,proto3" json:"radius,omitempty"`
}

func (x *GetMinimalPropertiesRequest) Reset() {
	*x = GetMinimalPropertiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinimalPropertiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinimalPropertiesRequest) ProtoMessage() {}

func (x *GetMinimalPropertiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinimalPropertiesRequest.ProtoReflect.Descriptor instead.
func (*GetMinimalPropertiesRequest) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetMinimalPropertiesRequest) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetMinimalPropertiesRequest) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *GetMinimalPropertiesRequest) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type GetMinimalPropertiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties []*SingleMinimalProperty `protobuf:"bytes,1,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *GetMinimalPropertiesResponse) Reset() {
	*x = GetMinimalPropertiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinimalPropertiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinimalPropertiesResponse) ProtoMessage() {}

func (x *GetMinimalPropertiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinimalPropertiesResponse.ProtoReflect.Descriptor instead.
func (*GetMinimalPropertiesResponse) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetMinimalPropertiesResponse) GetProperties() []*SingleMinimalProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

type SingleMinimalProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Property *MinimalProperty    `protobuf:"bytes,1,opt,name=property,proto3" json:"property,omitempty"`
	Owner    *pb.GetUserResponse `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *SingleMinimalProperty) Reset() {
	*x = SingleMinimalProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleMinimalProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleMinimalProperty) ProtoMessage() {}

func (x *SingleMinimalProperty) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleMinimalProperty.ProtoReflect.Descriptor instead.
func (*SingleMinimalProperty) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{17}
}

func (x *SingleMinimalProperty) GetProperty() *MinimalProperty {
	if x != nil {
		return x.Property
	}
	return nil
}

func (x *SingleMinimalProperty) GetOwner() *pb.GetUserResponse {
	if x != nil {
		return x.Owner
	}
	return nil
}

type GetUserPropertiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetUserPropertiesRequest) Reset() {
	*x = GetUserPropertiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPropertiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPropertiesRequest) ProtoMessage() {}

func (x *GetUserPropertiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPropertiesRequest.ProtoReflect.Descriptor instead.
func (*GetUserPropertiesRequest) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserPropertiesRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type GetUserPropertiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties []*Property `protobuf:"bytes,1,rep,name=properties,proto3" json:"properties,omitempty"`
}

func (x *GetUserPropertiesResponse) Reset() {
	*x = GetUserPropertiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_property_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserPropertiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserPropertiesResponse) ProtoMessage() {}

func (x *GetUserPropertiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_property_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserPropertiesResponse.ProtoReflect.Descriptor instead.
func (*GetUserPropertiesResponse) Descriptor() ([]byte, []int) {
	return file_property_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserPropertiesResponse) GetProperties() []*Property {
	if x != nil {
		return x.Properties
	}
	return nil
}

var File_property_service_proto protoreflect.FileDescriptor

var file_property_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb1, 0x07, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44,
	0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x68,
	0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x74,
	0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x62, 0x75, 0x72,
	0x62, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x62, 0x75, 0x72, 0x62,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x6f, 0x77, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x6f, 0x77, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x73, 0x68,
	0x61, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x74, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x65, 0x74, 0x73, 0x41, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x65, 0x65, 0x57, 0x69, 0x66, 0x69,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x57, 0x69, 0x66, 0x69,
	0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x77, 0x61, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72,
	0x69, 0x63, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x69, 0x74, 0x79,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x1c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x22, 0x9e, 0x04, 0x0a, 0x0f, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x44, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12,
	0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x12,
	0x3a, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x49, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x22,
	0x30, 0x0a, 0x14, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x22, 0x5d, 0x0a, 0x15, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x41, 0x72, 0x65,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x41, 0x72, 0x65,
	0x61, 0x52, 0x0d, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x73,
	0x22, 0x7a, 0x0a, 0x0c, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55,
	0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55,
	0x52, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x63, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75,
	0x73, 0x22, 0x5b, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x37,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x16, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x36, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x6e, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0x63, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x4f, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x22, 0x6f, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61,
	0x64, 0x69, 0x75, 0x73, 0x22, 0x67, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6d,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x8b, 0x01,
	0x0a, 0x15, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x69, 0x6e,
	0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x32, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x57, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x32, 0xc0, 0x08, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7b, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69,
	0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x1e, 0x47, 0x65,
	0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2d, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12,
	0x6b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x57, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x1a, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x27, 0x2e,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x65, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x64, 0x41, 0x72, 0x65, 0x61, 0x73, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x46, 0x6f, 0x78, 0x35, 0x32, 0x30,
	0x2f, 0x61, 0x77, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_property_service_proto_rawDescOnce sync.Once
	file_property_service_proto_rawDescData = file_property_service_proto_rawDesc
)

func file_property_service_proto_rawDescGZIP() []byte {
	file_property_service_proto_rawDescOnce.Do(func() {
		file_property_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_property_service_proto_rawDescData)
	})
	return file_property_service_proto_rawDescData
}

var file_property_service_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_property_service_proto_goTypes = []interface{}{
	(*Property)(nil),                     // 0: property.service.Property
	(*MinimalProperty)(nil),              // 1: property.service.MinimalProperty
	(*Photo)(nil),                        // 2: property.service.Photo
	(*FeaturedAreasRequest)(nil),         // 3: property.service.FeaturedAreasRequest
	(*FeaturedAreasResponse)(nil),        // 4: property.service.FeaturedAreasResponse
	(*FeaturedArea)(nil),                 // 5: property.service.FeaturedArea
	(*PromotedRequest)(nil),              // 6: property.service.PromotedRequest
	(*PromotedResponse)(nil),             // 7: property.service.PromotedResponse
	(*DeletePropertyRequest)(nil),        // 8: property.service.DeletePropertyRequest
	(*DeletePropertyResponse)(nil),       // 9: property.service.DeletePropertyResponse
	(*GetSinglePropertyRequest)(nil),     // 10: property.service.GetSinglePropertyRequest
	(*SinglePropertyResponse)(nil),       // 11: property.service.SinglePropertyResponse
	(*GetMultiplePropertyRequest)(nil),   // 12: property.service.GetMultiplePropertyRequest
	(*GetMultiplePropertyResponse)(nil),  // 13: property.service.GetMultiplePropertyResponse
	(*CreatePropertyRequest)(nil),        // 14: property.service.CreatePropertyRequest
	(*GetMinimalPropertiesRequest)(nil),  // 15: property.service.GetMinimalPropertiesRequest
	(*GetMinimalPropertiesResponse)(nil), // 16: property.service.GetMinimalPropertiesResponse
	(*SingleMinimalProperty)(nil),        // 17: property.service.SingleMinimalProperty
	(*GetUserPropertiesRequest)(nil),     // 18: property.service.GetUserPropertiesRequest
	(*GetUserPropertiesResponse)(nil),    // 19: property.service.GetUserPropertiesResponse
	(*timestamppb.Timestamp)(nil),        // 20: google.protobuf.Timestamp
	(*pb.GetUserResponse)(nil),           // 21: user.service.GetUserResponse
}
var file_property_service_proto_depIdxs = []int32{
	20, // 0: property.service.Property.postedDate:type_name -> google.protobuf.Timestamp
	2,  // 1: property.service.Property.photos:type_name -> property.service.Photo
	20, // 2: property.service.MinimalProperty.postedDate:type_name -> google.protobuf.Timestamp
	2,  // 3: property.service.MinimalProperty.photos:type_name -> property.service.Photo
	5,  // 4: property.service.FeaturedAreasResponse.featuredAreas:type_name -> property.service.FeaturedArea
	17, // 5: property.service.PromotedResponse.properties:type_name -> property.service.SingleMinimalProperty
	0,  // 6: property.service.SinglePropertyResponse.property:type_name -> property.service.Property
	21, // 7: property.service.SinglePropertyResponse.owner:type_name -> user.service.GetUserResponse
	11, // 8: property.service.GetMultiplePropertyResponse.response:type_name -> property.service.SinglePropertyResponse
	0,  // 9: property.service.CreatePropertyRequest.property:type_name -> property.service.Property
	17, // 10: property.service.GetMinimalPropertiesResponse.properties:type_name -> property.service.SingleMinimalProperty
	1,  // 11: property.service.SingleMinimalProperty.property:type_name -> property.service.MinimalProperty
	21, // 12: property.service.SingleMinimalProperty.owner:type_name -> user.service.GetUserResponse
	0,  // 13: property.service.GetUserPropertiesResponse.properties:type_name -> property.service.Property
	15, // 14: property.service.PropertyService.GetMinimalInfoProperties:input_type -> property.service.GetMinimalPropertiesRequest
	15, // 15: property.service.PropertyService.GetMinimalInfoPropertiesStream:input_type -> property.service.GetMinimalPropertiesRequest
	10, // 16: property.service.PropertyService.GetSingleProperty:input_type -> property.service.GetSinglePropertyRequest
	18, // 17: property.service.PropertyService.GetUserProperties:input_type -> property.service.GetUserPropertiesRequest
	12, // 18: property.service.PropertyService.GetMultipleProperties:input_type -> property.service.GetMultiplePropertyRequest
	14, // 19: property.service.PropertyService.CreateProperty:input_type -> property.service.CreatePropertyRequest
	0,  // 20: property.service.PropertyService.UpdateProperty:input_type -> property.service.Property
	8,  // 21: property.service.PropertyService.DeleteProperty:input_type -> property.service.DeletePropertyRequest
	3,  // 22: property.service.PropertyService.GetFeaturedAreas:input_type -> property.service.FeaturedAreasRequest
	6,  // 23: property.service.PropertyService.GetPromotedProperties:input_type -> property.service.PromotedRequest
	16, // 24: property.service.PropertyService.GetMinimalInfoProperties:output_type -> property.service.GetMinimalPropertiesResponse
	16, // 25: property.service.PropertyService.GetMinimalInfoPropertiesStream:output_type -> property.service.GetMinimalPropertiesResponse
	11, // 26: property.service.PropertyService.GetSingleProperty:output_type -> property.service.SinglePropertyResponse
	19, // 27: property.service.PropertyService.GetUserProperties:output_type -> property.service.GetUserPropertiesResponse
	13, // 28: property.service.PropertyService.GetMultipleProperties:output_type -> property.service.GetMultiplePropertyResponse
	0,  // 29: property.service.PropertyService.CreateProperty:output_type -> property.service.Property
	0,  // 30: property.service.PropertyService.UpdateProperty:output_type -> property.service.Property
	9,  // 31: property.service.PropertyService.DeleteProperty:output_type -> property.service.DeletePropertyResponse
	4,  // 32: property.service.PropertyService.GetFeaturedAreas:output_type -> property.service.FeaturedAreasResponse
	7,  // 33: property.service.PropertyService.GetPromotedProperties:output_type -> property.service.PromotedResponse
	24, // [24:34] is the sub-list for method output_type
	14, // [14:24] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_property_service_proto_init() }
func file_property_service_proto_init() {
	if File_property_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_property_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Property); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinimalProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Photo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeaturedAreasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeaturedAreasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeaturedArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSinglePropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SinglePropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultiplePropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMultiplePropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMinimalPropertiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMinimalPropertiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleMinimalProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPropertiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_property_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserPropertiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_property_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_property_service_proto_goTypes,
		DependencyIndexes: file_property_service_proto_depIdxs,
		MessageInfos:      file_property_service_proto_msgTypes,
	}.Build()
	File_property_service_proto = out.File
	file_property_service_proto_rawDesc = nil
	file_property_service_proto_goTypes = nil
	file_property_service_proto_depIdxs = nil
}
